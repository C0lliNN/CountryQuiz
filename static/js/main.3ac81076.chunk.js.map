{"version":3,"sources":["components/Card/index.tsx","assets/images/results_illustration.svg","components/Feedback/styles.ts","components/Feedback/index.tsx","components/Question/styles.ts","assets/images/question_illustration.svg","assets/icons/check.svg","assets/icons/close.svg","components/Question/index.tsx","components/Spinner/index.tsx","components/Title/index.tsx","services/api.ts","context/countries.tsx","assets/images/background.png","pages/Home/styles.ts","pages/Home/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","styled","div","Container","Title","h2","Info","p","Button","button","Feedback","correctAnswers","handleReset","src","illustration","alt","type","onClick","section","Img","img","Alternative","Question","title","alternatives","answered","flag","selectedAlternative","correctAnswer","onAnswer","onNext","alternativeNodes","map","alternative","i","icon","className","wrongIcon","correctIcon","String","fromCharCode","load","keyframes","Spinner","h1","axios","create","baseURL","initialState","isLoading","countries","error","reducer","state","action","CountriesContext","React","createContext","Provider","children","useReducer","dispatch","getData","useCallback","a","api","get","data","c","name","region","capital","message","useEffect","value","main","background","getRandomElements","array","n","obj","clonedArray","results","removedItem","splice","Math","floor","random","length","pop","undefined","push","questionsAnswered","currentQuestion","mode","newState","newQuestion","Home","useContext","generateNewQuestion","correctCountry","content","App","basename","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8cAEA,IAQeA,EARFC,IAAOC,IAAV,KCFK,MAA0B,iD,mmDCElC,IAAMC,EAAYF,IAAOC,IAAV,KAwBTE,EAAQH,IAAOI,GAAV,KAgBLC,EAAOL,IAAOM,EAAV,KAqBJC,EAASP,IAAOQ,OAAV,KCtDJ,SAASC,EAAT,GAA2D,IAAvCC,EAAsC,EAAtCA,eAAgBC,EAAsB,EAAtBA,YACjD,OACE,eAACT,EAAD,WACE,qBAAKU,IAAKC,EAAcC,IAAI,KAC5B,gCACE,cAACX,EAAD,sBACA,eAACE,EAAD,qBAEE,+BAAOK,IAFT,wBAOF,cAACH,EAAD,CAAQQ,KAAK,SAASC,QAASL,EAA/B,0B,21FCpBC,IAAMT,EAAYF,IAAOiB,QAAV,KA6BTd,EAAQH,IAAOI,GAAV,KAeLc,EAAMlB,IAAOmB,IAAV,KAgBHC,EAAcpB,IAAOC,IAAV,KA6EXM,EAASP,IAAOQ,OAAV,KC3IJ,MAA0B,kDCA1B,MAA0B,kCCA1B,MAA0B,kCCa1B,SAASa,EAAT,GASJ,IARTC,EAQQ,EARRA,MACAC,EAOQ,EAPRA,aACAC,EAMQ,EANRA,SACAC,EAKQ,EALRA,KACAC,EAIQ,EAJRA,oBACAC,EAGQ,EAHRA,cACAC,EAEQ,EAFRA,SACAC,EACQ,EADRA,OAEMC,EAAmBP,EAAaQ,KAAI,SAACC,EAAaC,GACtD,IAAIC,EAAO,KACPC,EAAY,GAahB,OAXIX,IACEQ,IAAgBN,IAClBQ,EAAO,qBAAKC,UAAU,OAAOvB,IAAKwB,EAAWtB,IAAI,KACjDqB,EAAY,SAEVH,IAAgBL,IAClBO,EAAO,qBAAKC,UAAU,OAAOvB,IAAKyB,EAAavB,IAAI,KACnDqB,EAAY,YAKd,eAACf,EAAD,CAEEJ,QAAS,kBAAMY,EAASI,IACxBG,UAAWA,EAHb,UAKE,sBAAMA,UAAU,SAAhB,SAA0BG,OAAOC,aAAaN,EAAI,MACjDR,EACC,qBAAKU,UAAU,OAAOvB,IAAKoB,EAAalB,IAAI,KAE5C,sBAAMqB,UAAU,OAAhB,SAAwBH,IAEzBE,IAVIF,MAeX,OACE,eAAC,EAAD,CAAWG,UAAWX,EAAW,WAAa,GAA9C,UACE,cAACN,EAAD,CAAKN,IAAKC,EAAcC,IAAI,KAC5B,cAAC,EAAD,UAAQQ,IACPQ,EACD,cAAC,EAAD,CAAQd,QAASa,EAAjB,qB,yxBCzDN,IAAMW,EAAOC,YAAH,KAUJvC,EAAYF,IAAOC,IAAV,IAaAuC,GAQA,SAASE,IACtB,OAAO,cAAC,EAAD,yB,2TCjCT,IAiBevC,EAjBDH,IAAO2C,GAAV,K,iCCAIC,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,qCC8BLC,EAAsB,CAC1BC,WAAW,EACXC,UAAW,GACXC,MAAO,MAGT,SAASC,KAA6D,IAArDC,EAAoD,uDAArCL,EAAcM,EAAuB,uCACnE,OAAQA,EAAOtC,MACb,IAAK,gBACH,OAAO,2BACFqC,GADL,IAEEJ,WAAW,IAEf,IAAK,kBACH,MAAO,CACLA,WAAW,EACXC,UAAWI,EAAOJ,UAClBC,MAAO,MAEX,IAAK,kBACH,MAAO,CACLF,WAAW,EACXC,UAAW,GACXC,MAAOG,EAAOH,OAElB,QACE,OAAOE,GAIN,IAAME,GAAmBC,IAAMC,cAAqBT,GAgC5CU,GA9BE,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAsB,EACdC,qBAAWR,GAASJ,GADN,mBACjCK,EADiC,KAC1BQ,EAD0B,KAGlCC,EAAUC,sBAAW,sBAAC,gCAAAC,EAAA,6DAC1BH,EAAS,CAAE7C,KAAM,kBADS,kBAGDiD,EAAIC,IAAI,OAHP,gBAGhBC,EAHgB,EAGhBA,KACFjB,EAA4BiB,EAAKnC,KAAI,SAACoC,GAAD,MAAiB,CAC1DC,KAAMD,EAAEC,KACRC,OAAQF,EAAEE,OACVC,QAASH,EAAEG,QACX7C,KAAM0C,EAAE1C,SAEVmC,EAAS,CAAE7C,KAAM,kBAAmBkC,cAVZ,kDAYxBW,EAAS,CAAE7C,KAAM,kBAAmBmC,MAAO,KAAIqB,UAZvB,0DAczB,IAMH,OAJAC,qBAAU,WACRX,MACC,IAGD,cAACP,GAAiBG,SAAlB,CAA2BgB,MAAOrB,EAAlC,SACGM,KC1FQ,OAA0B,uC,ycCIlC,IAAMxD,GAAYF,IAAO0E,KAAV,KAOIC,ICW1B,SAASC,GAAqBC,EAAYC,GAKxC,IAJA,IALiBC,EAKXC,EAAW,YAAOH,GAClBI,EAAe,GAEjBhD,EAAI,EACDA,EAAI6C,GAAG,CACZ,IAAMI,EAAcF,EACjBG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWT,EAAMU,QAAS,GACjDC,MACEN,MAbUH,EAagBG,SAZOO,IAAzBV,EAAgBtD,MAYmByD,EAAYZ,WAI5DW,EAAQS,KAAKR,GACbjD,GAAK,GAGP,OAAOgD,EAwBT,IAAMlC,GAAsB,CAC1B4C,kBAAmB,EACnBjF,eAAgB,EAChBkF,gBAAiB,KACjBC,KAAM,aAGR,SAAS1C,KAA6D,IAArDC,EAAoD,uDAArCL,GAAcM,EAAuB,uCACnE,OAAQA,EAAOtC,MACb,IAAK,SAAW,IAAD,IACb,aAAIqC,EAAMwC,uBAAV,aAAI,EAAuBpE,SACzB,OAAO4B,EAGT,IAAM0C,EAAe,2BAChB1C,GADgB,IAEnBwC,gBAAgB,2BACVxC,EAAMwC,iBADG,IAEbpE,UAAU,EACVE,oBAAqB2B,EAAO3B,wBAQhC,OAJAoE,EAASH,mBAAqB,EAC1BtC,EAAO3B,uBAAP,UAA+B0B,EAAMwC,uBAArC,aAA+B,EAAuBjE,iBACxDmE,EAASpF,gBAAkB,GAEtBoF,EAET,IAAK,OACH,IAAMA,EAAe,eAChB1C,GASL,OANI0C,EAASH,mBAAqB,EAChCG,EAASD,KAAO,WAEhBC,EAASF,gBAAkBvC,EAAO0C,YAG7BD,EAET,IAAK,QACH,OAAO,2BACF/C,IADL,IAEE6C,gBAAiBvC,EAAO0C,cAG5B,QACE,OAAO3C,GAIE,SAAS4C,KACtB,IAAM9B,EAAO+B,qBAAW3C,IADK,EAGHK,qBAAWR,GAASJ,IAHjB,mBAGtBK,EAHsB,KAGfQ,EAHe,KAKrBgC,EAA0CxC,EAA1CwC,gBAAiBC,EAAyBzC,EAAzByC,KAAMnF,EAAmB0C,EAAnB1C,eAE/B,SAASwF,IACP,IAEMnF,EAAO6D,GAFC,CAAC,UAAW,QAEY,GAAGY,MAEnCvC,EAAY2B,GAAkBV,EAAKjB,UAAW,GAE9CkD,EAAiBvB,GAAkB3B,EAAW,GAAGuC,MAEjDjE,EAAe0B,EAAUlB,KAAI,SAACoC,GAAD,OAAOA,EAAEpD,MAE5C,MAAO,CACLO,MAAM,eAAD,OAAiBP,EAAjB,eAA4BoF,EAAe/B,MAChD7C,eACAE,KAAe,SAATV,EACNS,UAAU,EACVG,cAAewE,EAAepF,GAC9BW,oBAAqB,MAIzB8C,qBAAU,WACJN,EAAKjB,UAAUsC,QACjB3B,EAAS,CACP7C,KAAM,OACNgF,YAAaG,QAGhB,CAAChC,EAAKjB,YAcT,IAAImD,EAAU,KAyBd,OArBIA,EAFS,cAATP,EACED,EAEA,cAACvE,EAAD,CACEC,MAAOsE,EAAgBtE,MACvBC,aAAcqE,EAAgBrE,aAC9BE,KAAMmE,EAAgBnE,KACtBD,SAAUoE,EAAgBpE,SAC1BG,cAAeiE,EAAgBjE,cAC/BD,oBAAqBkE,EAAgBlE,oBACrCE,SAxBR,SAAsBI,GACpB4B,EAAS,CAAE7C,KAAM,SAAUW,oBAAqBM,KAwB1CH,OArBR,WACE+B,EAAS,CAAE7C,KAAM,OAAQgF,YAAaG,SAwB1B,cAACxD,EAAD,IAIV,cAACjC,EAAD,CAAUC,eAAgBA,EAAgBC,YAzB9C,WACEiD,EAAS,CAAE7C,KAAM,QAASgF,YAAaG,SA6BvC,cAAC,GAAD,UACE,gCACE,cAAC,EAAD,2BACA,cAAC,EAAD,UAAOE,SCnLAC,OAVf,WACE,OACE,cAAC,IAAD,CAAeC,SAAS,cAAxB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWR,UCKpBS,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.3ac81076.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Card = styled.div`\n  background-color: #fff;\n  width: 100%;\n  border-radius: 24px;\n  padding: 2px 32px;\n  box-sizing: border-box;\n`;\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/results_illustration.d76bfdf8.svg\";","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  padding: 20px 0;\n  box-sizing: border-box;\n  & div {\n    margin: 20px 0;\n  }\n  @media (min-width: 1024px) {\n    padding: 30px 0;\n    & div {\n      margin: 30px 0;\n    }\n  }\n  @media (min-width: 1440px) {\n    padding: 40px 0;\n    & div {\n      margin: 40px 0;\n    }\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 32px;\n  text-align: center;\n  font-weight: 700;\n  color: #1d355d;\n  margin: 0;\n\n  @media (min-width: 1024px) {\n    font-size: 36px;\n  }\n\n  @media (min-width: 1440px) {\n    font-size: 48px;\n  }\n`;\n\nexport const Info = styled.p`\n  font-size: 14px;\n  margin: 0%;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  color: #1d355d;\n  & span {\n    font-size: 36px;\n    margin: 0 4px;\n    font-weight: bold;\n    color: #60bf88;\n  }\n  @media (min-width: 1024px) {\n    font-size: 16px;\n  }\n  @media (min-width: 1440px) {\n    font-size: 18px;\n  }\n`;\n\nexport const Button = styled.button`\n  border: 2px solid #1d355d;\n  box-sizing: border-box;\n  border-radius: 12px;\n  padding: 10px 32px;\n  outline: none;\n  cursor: pointer;\n  background-color: transparent;\n  color: #1d355d;\n  font-weight: 600;\n  font-size: 14px;\n\n  @media (min-width: 1024px) {\n    font-size: 16px;\n    padding: 12px 40px;\n  }\n  @media (min-width: 1440px) {\n    font-size: 18px;\n    padding: 18px 60px;\n  }\n`;\n","import React from 'react';\nimport illustration from '../../assets/images/results_illustration.svg';\nimport { Container, Title, Info, Button } from './styles';\n\ninterface Props {\n  correctAnswers: number;\n  handleReset(): void;\n}\n\nexport default function Feedback({ correctAnswers, handleReset }: Props) {\n  return (\n    <Container>\n      <img src={illustration} alt=\"\" />\n      <div>\n        <Title>Results</Title>\n        <Info>\n          You got\n          <span>{correctAnswers}</span>\n          correct answers\n        </Info>\n      </div>\n\n      <Button type=\"button\" onClick={handleReset}>\n        Try Again\n      </Button>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.section`\n  padding-top: 30px;\n  padding-bottom: 12px;\n  position: relative;\n  &.answered {\n    button {\n      display: block;\n    }\n  }\n  &:not(.answered) > div {\n    cursor: pointer;\n    &:hover {\n      background: #f9a826;\n      border-color: #f9a826;\n      color: #fff;\n    }\n  }\n\n  @media (min-width: 1024px) {\n    padding-top: 40px;\n    padding-bottom: 18px;\n  }\n\n  @media (min-width: 1440px) {\n    padding-top: 58px;\n    padding-bottom: 24px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 18px;\n  color: #2f527b;\n  margin: 0;\n  margin-bottom: 18px;\n  @media (min-width: 1024px) {\n    font-size: 18px;\n    margin-bottom: 24px;\n  }\n  @media (min-width: 1440px) {\n    font-size: 24px;\n    margin-bottom: 32px;\n  }\n`;\n\nexport const Img = styled.img`\n  position: absolute;\n  right: -32px;\n  top: -50px;\n  width: 100px;\n\n  @media (min-width: 1024px) {\n    width: 131px;\n    top: -60px;\n  }\n  @media (min-width: 1440px) {\n    width: 162px;\n    top: -75px;\n  }\n`;\n\nexport const Alternative = styled.div`\n  border: 2px solid rgba(96, 102, 208, 0.7);\n  box-sizing: border-box;\n  border-radius: 12px;\n  padding: 4px 20px;\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n  color: rgba(96, 102, 208, 0.7);\n  transition: all 0.2s ease-in-out;\n\n  &.correct {\n    background-color: #60bf88;\n    border-color: #60bf88;\n    color: #fff;\n  }\n  &.wrong {\n    background-color: #ea8282;\n    border-color: #ea8282;\n    color: #fff;\n  }\n\n  & .letter {\n    text-transform: uppercase;\n    padding-right: 30px;\n    font-size: 14px;\n  }\n\n  & .text {\n    font-size: 12px;\n  }\n\n  & .flag {\n    display: block;\n    height: 18px;\n  }\n\n  & .icon {\n    margin-left: auto;\n  }\n\n  @media (min-width: 1024px) {\n    padding: 6px 20px;\n    margin-bottom: 18px;\n    & .letter {\n      padding-right: 30px;\n      font-size: 20px;\n    }\n\n    & .text {\n      font-size: 14px;\n    }\n\n    & .flag {\n      height: 25px;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    padding: 8px 20px;\n    margin-bottom: 24px;\n\n    & .letter {\n      padding-right: 46px;\n      font-size: 24px;\n    }\n\n    & .text {\n      font-size: 18px;\n    }\n\n    & .flag {\n      height: 40px;\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  border: none;\n  outline: none;\n  color: #fff;\n  font-size: 14px;\n  font-weight: 700;\n  background-color: #f9a826;\n  border-radius: 12px;\n  cursor: pointer;\n  padding: 8px 15px;\n  display: none;\n  margin-left: auto;\n  @media (min-width: 1024px) {\n    padding: 10px 20px;\n    font-size: 16px;\n  }\n  @media (min-width: 1440px) {\n    padding: 15px 35px;\n    font-size: 18px;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/question_illustration.182b6171.svg\";","export default __webpack_public_path__ + \"static/media/check.aea8ee6a.svg\";","export default __webpack_public_path__ + \"static/media/close.ff881fcd.svg\";","import React from 'react';\nimport { Container, Img, Title, Alternative, Button } from './styles';\nimport { IQuestion } from '../../pages/Home';\nimport illustration from '../../assets/images/question_illustration.svg';\nimport correctIcon from '../../assets/icons/check.svg';\nimport wrongIcon from '../../assets/icons/close.svg';\n\ninterface Props extends IQuestion {\n  // eslint-disable-next-line no-unused-vars\n  onAnswer(alternative: string): void;\n  onNext(): void;\n}\n\nexport default function Question({\n  title,\n  alternatives,\n  answered,\n  flag,\n  selectedAlternative,\n  correctAnswer,\n  onAnswer,\n  onNext,\n}: Props) {\n  const alternativeNodes = alternatives.map((alternative, i) => {\n    let icon = null;\n    let className = '';\n\n    if (answered) {\n      if (alternative === selectedAlternative) {\n        icon = <img className=\"icon\" src={wrongIcon} alt=\"\" />;\n        className = 'wrong';\n      }\n      if (alternative === correctAnswer) {\n        icon = <img className=\"icon\" src={correctIcon} alt=\"\" />;\n        className = 'correct';\n      }\n    }\n\n    return (\n      <Alternative\n        key={alternative}\n        onClick={() => onAnswer(alternative)}\n        className={className}\n      >\n        <span className=\"letter\">{String.fromCharCode(i + 65)}</span>\n        {flag ? (\n          <img className=\"flag\" src={alternative} alt=\"\" />\n        ) : (\n          <span className=\"text\">{alternative}</span>\n        )}\n        {icon}\n      </Alternative>\n    );\n  });\n\n  return (\n    <Container className={answered ? 'answered' : ''}>\n      <Img src={illustration} alt=\"\" />\n      <Title>{title}</Title>\n      {alternativeNodes}\n      <Button onClick={onNext}>Next</Button>\n    </Container>\n  );\n}\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst load = keyframes`\n0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }`;\n\nconst Container = styled.div`\n  border-radius: 50%;\n  width: 10em;\n  height: 10em;\n  margin: 60px auto;\n  font-size: 10px;\n  position: relative;\n  text-indent: -9999em;\n  border-top: 1.1em solid rgba(1, 79, 223, 0.2);\n  border-right: 1.1em solid rgba(1, 79, 223, 0.2);\n  border-bottom: 1.1em solid rgba(1, 79, 223, 0.2);\n  border-left: 1.1em solid #014fdf;\n  transform: translateZ(0);\n  animation: ${load} 1.1s infinite linear;\n  &:after {\n    border-radius: 50%;\n    width: 10em;\n    height: 10em;\n  }\n`;\n\nexport default function Spinner() {\n  return <Container>Loading...</Container>;\n}\n","import styled from 'styled-components';\n\nconst Title = styled.h1`\n  font-size: 20px;\n  font-weight: 700;\n  margin: 0;\n  margin-bottom: 10px;\n  text-transform: uppercase;\n  color: #fff;\n\n  @media(min-width: 1024px) {\n    font-size: 30px\n  }\n\n  @media(min-width: 1440px) {\n    font-size: 36px;\n  }\n`;\n\nexport default Title;\n","import axios from 'axios'\n\nexport default axios.create({\n  baseURL: 'https://restcountries.eu/rest/v2'\n});","import React, { useCallback, useEffect, useReducer } from 'react';\nimport api from '../services/api';\n\nexport interface Country {\n  name: string;\n  capital: string;\n  region: string;\n  flag: string;\n}\n\ninterface State {\n  isLoading: boolean;\n  countries: Array<Country>;\n  error: string | null;\n}\n\ninterface Props {\n  children: React.ReactNode;\n}\n\ntype Action =\n  | {\n      type: 'REQUEST_START';\n    }\n  | {\n      type: 'REQUEST_SUCCESS';\n      countries: Array<Country>;\n    }\n  | {\n      type: 'REQUEST_FAILURE';\n      error: string;\n    };\n\nconst initialState: State = {\n  isLoading: false,\n  countries: [],\n  error: null,\n};\n\nfunction reducer(state: State = initialState, action: Action): State {\n  switch (action.type) {\n    case 'REQUEST_START':\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case 'REQUEST_SUCCESS':\n      return {\n        isLoading: false,\n        countries: action.countries,\n        error: null,\n      };\n    case 'REQUEST_FAILURE':\n      return {\n        isLoading: false,\n        countries: [],\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n}\n\nexport const CountriesContext = React.createContext<State>(initialState);\n\nconst Provider = ({ children }: Props) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const getData = useCallback(async () => {\n    dispatch({ type: 'REQUEST_START' });\n    try {\n      const { data } = await api.get('all');\n      const countries: Array<Country> = data.map((c: Country) => ({\n        name: c.name,\n        region: c.region,\n        capital: c.capital,\n        flag: c.flag,\n      }));\n      dispatch({ type: 'REQUEST_SUCCESS', countries });\n    } catch (err) {\n      dispatch({ type: 'REQUEST_FAILURE', error: err.message });\n    }\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <CountriesContext.Provider value={state}>\n      {children}\n    </CountriesContext.Provider>\n  );\n};\n\nexport default Provider;\n","export default __webpack_public_path__ + \"static/media/background.41dbc550.png\";","/* eslint-disable import/prefer-default-export */\nimport styled from 'styled-components';\nimport background from '../../assets/images/background.png';\n\nexport const Container = styled.main`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-image: url(${background});\n  background-position: center;\n  background-size: cover;\n  & > div {\n    width: 300px;\n\n    @media(min-width: 1024px) {\n      width: 400px;\n    }\n\n    @media(min-width: 1440px) {\n      width: 464px;\n    }\n  }\n`;\n","import React, { useContext, useEffect, useReducer } from 'react';\nimport Card from '../../components/Card';\nimport Feedback from '../../components/Feedback';\nimport Question from '../../components/Question';\nimport Spinner from '../../components/Spinner';\nimport Title from '../../components/Title';\nimport { CountriesContext, Country } from '../../context/countries';\nimport { Container } from './styles';\n\nexport interface IQuestion {\n  title: string;\n  alternatives: Array<string>;\n  flag: boolean;\n  answered: boolean;\n  correctAnswer: string;\n  selectedAlternative: string | null;\n}\n\nfunction isCountry(obj: any): obj is Country {\n  return obj && (obj as Country).flag !== undefined;\n}\n\nfunction getRandomElements<T>(array: T[], n: number): T[] {\n  const clonedArray = [...array];\n  const results: T[] = [];\n\n  let i = 0;\n  while (i < n) {\n    const removedItem = clonedArray\n      .splice(Math.floor(Math.random() * array.length), 1)\n      .pop() as T;\n    if (!removedItem || (isCountry(removedItem) && !removedItem.capital)) {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    results.push(removedItem);\n    i += 1;\n  }\n\n  return results;\n}\n\ninterface State {\n  questionsAnswered: number;\n  correctAnswers: number;\n  currentQuestion: IQuestion | null;\n  mode: 'ANSWERING' | 'CHECKING';\n}\n\ntype Action =\n  | {\n      type: 'ANSWER';\n      selectedAlternative: string;\n    }\n  | {\n      type: 'NEXT';\n      newQuestion: IQuestion;\n    }\n  | {\n      type: 'RESET';\n      newQuestion: IQuestion;\n    };\n\nconst initialState: State = {\n  questionsAnswered: 0,\n  correctAnswers: 0,\n  currentQuestion: null,\n  mode: 'ANSWERING',\n};\n\nfunction reducer(state: State = initialState, action: Action): State {\n  switch (action.type) {\n    case 'ANSWER': {\n      if (state.currentQuestion?.answered) {\n        return state;\n      }\n\n      const newState: State = {\n        ...state,\n        currentQuestion: {\n          ...(state.currentQuestion as IQuestion),\n          answered: true,\n          selectedAlternative: action.selectedAlternative,\n        },\n      };\n\n      newState.questionsAnswered += 1;\n      if (action.selectedAlternative === state.currentQuestion?.correctAnswer) {\n        newState.correctAnswers += 1;\n      }\n      return newState;\n    }\n    case 'NEXT': {\n      const newState: State = {\n        ...state,\n      };\n\n      if (newState.questionsAnswered >= 5) {\n        newState.mode = 'CHECKING';\n      } else {\n        newState.currentQuestion = action.newQuestion;\n      }\n\n      return newState;\n    }\n    case 'RESET':\n      return {\n        ...initialState,\n        currentQuestion: action.newQuestion,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default function Home() {\n  const data = useContext(CountriesContext);\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const { currentQuestion, mode, correctAnswers } = state;\n\n  function generateNewQuestion(): IQuestion {\n    const types = ['capital', 'flag'];\n\n    const type = getRandomElements(types, 1).pop() as 'capital' | 'flag';\n\n    const countries = getRandomElements(data.countries, 4);\n\n    const correctCountry = getRandomElements(countries, 1).pop() as Country;\n\n    const alternatives = countries.map((c) => c[type]);\n\n    return {\n      title: `What is the ${type} of ${correctCountry.name}`,\n      alternatives,\n      flag: type === 'flag',\n      answered: false,\n      correctAnswer: correctCountry[type],\n      selectedAlternative: null,\n    };\n  }\n\n  useEffect(() => {\n    if (data.countries.length) {\n      dispatch({\n        type: 'NEXT',\n        newQuestion: generateNewQuestion(),\n      });\n    }\n  }, [data.countries]);\n\n  function handleAnswer(alternative: string) {\n    dispatch({ type: 'ANSWER', selectedAlternative: alternative });\n  }\n\n  function handleNext() {\n    dispatch({ type: 'NEXT', newQuestion: generateNewQuestion() });\n  }\n\n  function handleReset() {\n    dispatch({ type: 'RESET', newQuestion: generateNewQuestion() });\n  }\n\n  let content = null;\n\n  if (mode === 'ANSWERING') {\n    if (currentQuestion) {\n      content = (\n        <Question\n          title={currentQuestion.title}\n          alternatives={currentQuestion.alternatives}\n          flag={currentQuestion.flag}\n          answered={currentQuestion.answered}\n          correctAnswer={currentQuestion.correctAnswer}\n          selectedAlternative={currentQuestion.selectedAlternative}\n          onAnswer={handleAnswer}\n          onNext={handleNext}\n        />\n      );\n    } else {\n      content = <Spinner />;\n    }\n  } else {\n    content = (\n      <Feedback correctAnswers={correctAnswers} handleReset={handleReset} />\n    );\n  }\n\n  return (\n    <Container>\n      <div>\n        <Title>Country Quiz</Title>\n        <Card>{content}</Card>\n      </div>\n    </Container>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\n\nfunction App() {\n  return (\n    <BrowserRouter basename=\"CountryQuiz\">\n      <Switch>\n        <Route path=\"/\" component={Home} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Provider from './context/countries';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}